library(shiny)
library(scales)
library(magrittr)
library(tidyverse)
library(stringr)

credit <- read_csv("Credit.csv")
credit$result <- NA

ui <- fluidPage(
    
      titlePanel("Прогнозирование кредитных данных"),
    
      sidebarLayout(
             sidebarPanel(
                    textAreaInput("rule", "Правило для выдачи кредита:"),

                     actionButton("go", "Применить",
                     style = "background-color:#1BB300;
                              color:#FFFFFF;
                              border-color:#00A13B;
                              border-style:solid;
                              border-width:2px;
                              border-radius:5%;
                              
                              font-size:18px;")),

              mainPanel( 
                     "Здесь вам нужно создать некоторые правила, чтобы решить, давать ли кредиты людям. 
                      Для этого используйте левую текстовую панель",
                      "Пример правила: Seniority > 8 | Job == 'fixed' ~ 1,TRUE ~ 0",
                      
                      textOutput("diepierule"),
                     
                      plotOutput("diepie")
            
        )
    )
)

server <- function(input, output) {
  
    #тут реактивность, чтобы кнопочка срабатывала  
    rule = eventReactive(input$go, {enquo(input$rule)})
    
    #тут а-ля тестовая строка, чтобы просто правило текстом высветило 
    output$diepierule <- renderPrint({!!rule()})
    
    #тут график
    output$diepie <- renderPlot({

      #сюда вставляется правило+
      dataAll = credit %>% mutate(
        result = case_when(!!!rule())) %>%
        group_by(result) %>%
        summarise(numb = n())

      pie = ggplot(data = dataAll) +
        geom_bar(aes(x = "", y = numb, fill = as.factor(result)), stat = 'identity') +
        coord_polar("y", start=0)

      blank_theme <- theme_minimal()+
        theme(
          axis.title.x = element_blank(),
          axis.title.y = element_blank(),
          panel.border = element_blank(),
          panel.grid=element_blank(),
          axis.ticks = element_blank(),
          plot.title=element_text(size=14, face="bold")
        )

      pie + scale_fill_brewer("RdYlBu") + blank_theme +
        theme(axis.text.x=element_blank())+
        geom_text(aes(x = "", y = numb/3 + c(0, cumsum(numb)[-length(numb)]),
                      label = percent(numb/4446)), size=7)

    })
  
}

shinyApp(ui = ui, server = server)
